- name: Fetch JAR from Maven server
  fetch:
    src: /home/ubuntu/app/target/spring-petclinic-3.1.0.jar
    dest: /tmp/spring-petclinic.jar
    flat: yes
  delegate_to: "{{ groups['maven_server'][0] }}"

- name: Check if JAR file exists
  stat:
    path: /tmp/spring-petclinic.jar
  register: jar_file_stat

- name: Fail if JAR file does not exist
  fail:
    msg: "JAR file does not exist, aborting deployment."
  when: not jar_file_stat.stat.exists

- name: Stop running Spring Boot app (if any)
  shell: |
    pkill -f 'spring-petclinic.jar' || true
  ignore_errors: yes

- name: Create app directory if it doesn't exist
  file:
    path: /opt/spring-petclinic
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Copy JAR to target server
  copy:
    src: /tmp/spring-petclinic.jar
    dest: /opt/spring-petclinic/spring-petclinic.jar
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Update application.properties for MySQL IP
  lineinfile:
    path: /opt/spring-petclinic/application.properties
    regexp: '^spring.datasource.url='
    line: 'spring.datasource.url=jdbc:mysql://{{ hostvars[groups["mysql_server"][0]]["ansible_host"] }}:3306/yourdb'
  create: yes

- name: Start Spring Boot app in background
  shell: |
    nohup java -jar /opt/spring-petclinic/spring-petclinic.jar --spring.config.location=/opt/spring-petclinic/application.properties > /opt/spring-petclinic/app.log 2>&1 &
  args:
    chdir: /opt/spring-petclinic
